{"version":3,"sources":["components/toggle_button/button.js","components/navbar/navbar.js","components/input-form/input.js","components/analysis-report/report.js","home.js","App.js","index.js"],"names":["toggleButton","props","type","className","onClick","mode","setMode","Navbar","style","backgroundColor","color","href","InputForm","htmlFor","id","cols","rows","onChange","object","setText","target","value","text","document","querySelector","display","toUpperCase","toLowerCase","textField","select","navigator","clipboard","writeText","Report","border","replace","length","split","join","trim","Home","background","backgroundSize","Analyzer","useState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e2d1fef.chunk.js","sourcesContent":["import './button.css';\r\n\r\nfunction toggleButton(props){\r\n\r\n\r\n    const toggleMode = () => {\r\n        if(props.mode === 'light') {\r\n            props.setMode('dark');\r\n        }\r\n\r\n        else { props.setMode('light'); }\r\n    }\r\n\r\n\r\n    return <input type=\"checkbox\" className=\"toggle\" onClick={toggleMode}/>;\r\n}\r\n\r\nexport default toggleButton;","import './navbar.css';\r\nimport ToggleButton from '../toggle_button/button';\r\n\r\nexport default function Navbar(props){\r\n\r\n\r\n    return <div className=\"navbar\" style={(props.mode === 'light')? {\r\n        backgroundColor: 'rgb(249, 244, 244)',\r\n        color: 'black'\r\n    } : {\r\n        backgroundColor: '#280202',\r\n        color: 'white'\r\n    } }>\r\n        <span>Text-Analyzer</span>\r\n        <div className='links'>\r\n            <a href=\"#\" style= {{color: (props.mode === 'light') ?'black' : 'white'}} >Home</a>\r\n            <a href=\"#\" style= {{color: (props.mode === 'light') ?'black' : 'white'}} >Services</a>\r\n            <a href=\"#\" style= {{color: (props.mode === 'light') ?'black' : 'white'}} >Our Team</a>\r\n            <a href=\"#\" style= {{color: (props.mode === 'light') ?'black' : 'white'}} >Contact Us</a>\r\n        </div>\r\n        <ToggleButton mode={props.mode} setMode={props.setMode} /> \r\n        <span className=\"mode\">Enable Dark mode</span>\r\n    </div>;\r\n}","import './input.css';\r\n\r\nexport default function InputForm(props){\r\n\r\n    const onChange = (object) => props.setText(object.target.value);\r\n\r\n    const makeUpper = ()=> props.setText(props.text.toUpperCase());\r\n    const makeLower = ()=> props.setText(props.text.toLowerCase());\r\n\r\n    const showAnalysis = () => document.querySelector('.reveal').style.display = 'block';\r\n\r\n    function copyText(){\r\n        const textField = document.querySelector('textarea');\r\n        textField.select();\r\n        navigator.clipboard.writeText(textField.value);\r\n    }\r\n\r\n    function deleteText(){ \r\n        props.setText('');\r\n        document.querySelector('.reveal').style.display = 'none';\r\n    }\r\n\r\n    return <div className=\"container\">\r\n        <label htmlFor=\"test\" style={{ color: (props.mode === 'light') ? 'black': 'white'}}>Paste or write the content inside given block</label>\r\n        <textarea id=\"test\" type='text' cols=\"73\" rows=\"11\" onChange={onChange} value={props.text}></textarea>\r\n        <div className=\"buttons\">\r\n            <button onClick={showAnalysis}>Submit text</button>\r\n            <button onClick={deleteText}>Clear text</button>\r\n            <button onClick={makeUpper}>Convert to Uppercase</button>\r\n            <button onClick={makeLower}>Convert to Lowercase</button>\r\n            <button onClick={copyText}>Copy text</button>\r\n        </div>\r\n    </div>\r\n}\r\n","import './report.css';\r\n\r\nexport default function Report(props){\r\n    \r\n\r\n    return <div className=\"container reveal\" style={{color : (props.mode === 'light') ? 'black' : 'white'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <div className=\"block\" style={{border : (props.mode === 'light') ? '0.2vw solid black' : '0.2vw solid white'}}>\r\n            <span>No. of chars (with spaces)  :   {props.text.replace('\\n', '').length}</span>\r\n            <span>No. of chars (without spaces)  :   {props.text.split(' ').join('').replace('\\n', '').length}</span>\r\n            <span>No. of words  :   {props.text.length === 0 ? 0: props.text.replace(/\\s+/g, \" \").trim().replace('\\n', '').split(' ').length}</span>\r\n            <span>No. of sentences  :   {props.text.length === 0 ? 0:props.text.split('\\n').length}</span>\r\n        </div>\r\n    </div>;\r\n}","import Form from './components/input-form/input';\r\nimport Report from './components/analysis-report/report';\r\n\r\n\r\nexport default function Home(props){        \r\n\r\n        document.querySelector('body').style.background = (props.mode === 'light')? 'lightyellow': 'url(https://www.wallpapertip.com/wmimgs/61-610111_galaxy-wallpaper-cartoon-free.jpg)';\r\n        document.querySelector('body').style.backgroundSize = 'cover';\r\n    \r\n    \r\n    return <>\r\n        <Form text={props.text} setText={props.setText} mode={props.mode}></Form>\r\n        <Report text={props.text} mode={props.mode}></Report>\r\n    </>\r\n}\r\n\r\n","import {useState} from 'react';\n\nimport Nav from './components/navbar/navbar';\nimport Home from './home';\n\n\nexport default function Analyzer(){\n\n  const [text, setText] = useState('');\n  const [mode, setMode] = useState('light');\n\n  return <>\n      \n      <Nav text={text} setText={setText} mode={mode} setMode={setMode} />                     \n      <Home text={text} setText={setText} mode={mode} />\n\n  </>;\n}","import './index.css';\nimport ReactDOM from 'react-dom';\nimport Analyzer from './App';\n\nReactDOM.render(\n  <Analyzer/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}